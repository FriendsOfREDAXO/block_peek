{"version":3,"file":"BlockPeek.js","sources":["../assets-src/BlockPeek.js"],"sourcesContent":[";(function ($) {\n  'use strict'\n  const DEBOUNCE_DELAY = 50\n  const debouncedScrollToSliceFromHash = debounce(\n    () => scrollToSliceFromHash(),\n    DEBOUNCE_DELAY\n  )\n\n  let debounceTimer = null\n\n  function debounce(func, delay) {\n    return function (...args) {\n      const context = this\n      clearTimeout(debounceTimer)\n      debounceTimer = setTimeout(() => func.apply(context, args), delay)\n    }\n  }\n\n  function iframePreviews() {\n    const $iframes = $('iframe[data-iframe-preview]')\n    const resizeIframe = (event) => {\n      // Only accept messages from your iframeâ€™s origin\n      if (event.data?.type === 'resize' && event.data?.id) {\n        const iframe = $iframes.filter(`[data-slice-id=\"${event.data.id}\"]`)[0]\n        if (!iframe) {\n          return\n        }\n        const wrapper = iframe.parentElement\n        const zoomFactor = parseFloat(wrapper.dataset.zoomFactor) || 0.5\n        wrapper.style.height = event.data.height * zoomFactor + 'px'\n      }\n    }\n\n    window.removeEventListener('message', resizeIframe)\n    if (!$iframes.length) {\n      return\n    }\n    window.addEventListener('message', resizeIframe)\n  }\n\n  function scrollToSliceFromHash() {\n    const pageHash = window.location.hash.substring(1)\n    if (pageHash) {\n      // Scroll to the hash after a short delay to ensure the iframe has resized\n      const targetElement = document.getElementById(pageHash)\n      if (targetElement) {\n        clearTimeout(debounceTimer)\n        targetElement.scrollIntoView({ behavior: 'auto' })\n      }\n    }\n  }\n\n  function asyncEdit() {\n    if (rex.page !== 'content/edit') {\n      return\n    }\n\n    let setHistory = true\n    let existingSliceEdit = $('.rex-slice-edit')\n\n    const editButtons = $('a.btn-edit[href*=\"slice_id\"]')\n    editButtons\n      .off('click.asyncEdit')\n      .on('click.asyncEdit', async function (e) {\n        e.preventDefault()\n        const $this = $(this)\n        const slice = $(this).closest('.rex-slice')\n        const sliceId = slice.attr('id')\n        if (!sliceId) {\n          return\n        }\n        if (existingSliceEdit.length) {\n          if (sliceId === existingSliceEdit.attr('id')) {\n            return\n          }\n          await restoreExistingSlice(existingSliceEdit)\n          existingSliceEdit = null\n        }\n\n        restore()\n        rex_loader.show()\n        try {\n          const result = await fetch(this.href, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'text/html',\n              'X-Requested-With': 'XMLHttpRequest'\n            }\n          })\n          if (!result.ok) throw new Error('Network response was not ok')\n          const html = await result.text()\n          const resultSlice = $(html).find(`#${sliceId}`)\n\n          if (resultSlice.length) {\n            $('.panel-body .alert').remove()\n            setSliceEdit(sliceId, slice)\n            slice.replaceWith(resultSlice)\n            $(document).trigger('rex:ready', [resultSlice])\n            debouncedScrollToSlice(resultSlice[0])\n            if (setHistory) {\n              history.pushState(null, '', $this.attr('href')) // change url without reloading page\n            }\n            setHistory = true\n          }\n          rex_loader.hide()\n        } catch (error) {\n          console.error('Error editing slice:', error)\n        }\n      })\n    const scrollToSlice = (slice) => {\n      slice.scrollIntoView({ behavior: 'auto' })\n    }\n    const setSliceEdit = (id, element) => {\n      rex.isSliceEditing = true\n      rex.sliceEditCurrent = element.clone(true, true)\n      rex.sliceEditCurrentId = id\n    }\n    const restore = () => {\n      if (rex.isSliceEditing && rex.sliceEditCurrent) {\n        const currentSlice = $(`#${rex.sliceEditCurrentId}`)\n        if (currentSlice.length && currentSlice.hasClass('rex-slice-edit')) {\n          currentSlice.replaceWith(rex.sliceEditCurrent)\n        }\n        rex.isSliceEditing = false\n        rex.sliceEditCurrent = null\n      }\n    }\n    const debouncedScrollToSlice = debounce(\n      (slice) => scrollToSlice(slice),\n      DEBOUNCE_DELAY\n    )\n    const restoreExistingSlice = async (slice) => {\n      const sliceId = slice.attr('id')\n      const $contentNav = $('#rex-js-structure-content-nav')\n      const editUrl = $contentNav.find('a[href*=\"edit\"]:first').attr('href')\n      if (editUrl) {\n        try {\n          const result = await fetch(editUrl, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'text/html',\n              'X-Requested-With': 'XMLHttpRequest'\n            }\n          })\n          if (!result.ok) throw new Error('Network response was not ok')\n          const html = await result.text()\n          const resultSlice = $(html).find(`#${sliceId}`)\n          if (resultSlice.length) {\n            $('.panel-body .alert').remove()\n            setSliceEdit(sliceId, slice)\n            slice.replaceWith(resultSlice)\n          }\n        } catch (error) {\n          console.error('Error restoring slice:', error)\n        }\n      }\n      return\n    }\n    // handle back/forward navigation\n    $(window)\n      .off('popstate.asyncEdit')\n      .on('popstate.asyncEdit', function (e) {\n        // check current url for slice_id and open edit if found\n        const urlParams = new URLSearchParams(window.location.search)\n        const sliceId = urlParams.get('slice_id')\n        if (sliceId) {\n          const $slice = $(`#slice${sliceId}`)\n          if ($slice.length) {\n            setHistory = false\n            $slice.find('a.btn-edit').trigger('click.asyncEdit')\n          }\n        } else {\n          // no slice_id in url, just scroll to top of page\n          window.scrollTo({ top: 0, behavior: 'auto' })\n        }\n      })\n  }\n\n  $(document).on('rex:ready rex:selectMedia rex:YForm_selectData', function () {\n    iframePreviews()\n    debouncedScrollToSliceFromHash()\n    asyncEdit()\n  })\n})(jQuery)\n"],"names":["$","debouncedScrollToSliceFromHash","debounce","scrollToSliceFromHash","debounceTimer","func","delay","args","context","iframePreviews","$iframes","resizeIframe","event","_a","_b","iframe","wrapper","zoomFactor","pageHash","targetElement","asyncEdit","setHistory","existingSliceEdit","$this","slice","sliceId","restoreExistingSlice","restore","result","html","resultSlice","setSliceEdit","debouncedScrollToSlice","error","scrollToSlice","id","element","currentSlice","editUrl","$slice"],"mappings":"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"}